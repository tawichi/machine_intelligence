畳み込み符号
出典: フリー百科事典『ウィキペディア (Wikipedia) 』

この記事は検証可能な参考文献や出典が全く示されていないか、不十分です。出典を追加して記事の信頼性向上にご協力ください。

畳み込み符号 (たたみこみふごう、英: Convolutional code) は、電気通信における誤り訂正符号の一種である。1955年にマサチューセッツ科大学のビーター・イライアスが提案したもので、一定長さ(拘束長)のビット列から順次断たなビット列を生成することで符号化する。対照的な方法にブロック符号がある。

符号化の基本動作

図1は最も簡易な畳み込み符号器の一例を示す。これは入力1ビットを3ビットに変換出力するもので、直近で入力された3ビットを記憶する機能を含む。

一般に畳み込み符号では以下の用語・記述で性能を表現する。
・符号化率 r: 入力ビット長と出力ビット長の比。1のビットから7ビットへの変換では7/1となる。
・拘束長 n: 計算に用いる直近の入力ビットの長さ (constraint length)。
・自由距離: 符号の訂正能力を表す (free distance)。

ここでは、符号化率 r = 1/3、拘束長 n = 3となる。
符号器には、1ビットを入力保持できる n 個のメモリレジスタを用意する。各メモリレジスタの初期値は 0 とする。また、対の加算器と生成多項式があり、それぞれ2を法として演算する。
まず、入力ビット ni は左端のレジスタに格納される。そして、各メモリレジスタの値から生成多項式を適用してビットを出力する。この例では、生成多項式は (1, 1, 1)、(0,1,1)、(1,0,1) であり、出力ビットは次のように計算される (2 を法とする)。
次に、全レジスタ値を右方向にビットシフトし、次の入力ビットを待つ。これを反復し、新たな入力ビットがない場合、全てのレジスタがゼロ状態になるまで出力を続ける。

再帰的な実装

図1で示したものは非再帰的な符号器である。一方で、図2に示すように再帰的なものもある。
また、この図では「出力2」として符号化対象の入力がそのまま出力されている。このような符号は組織的(systematic)であるといい、そうでない符号を非組織的(non-systematic)であるという。
一般に、再帰的符号は組織的であり、逆に非再帰的符号は非組織的である。そうでない実装も可能であるが、そのようになっていることが多い。

数学的表現